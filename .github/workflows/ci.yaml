name: CI

on:
  push:
  pull_request:

permissions:
  contents: read

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  cocogitto:
    name: Lint commits
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Actions Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Lint Commits
      uses: oknozor/cocogitto-action@v3

  typos:
    name: Check spelling
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Actions Repository
      uses: actions/checkout@v4
    - name: Check spelling
      uses: crate-ci/typos@master

  test:
    name: Build and test
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - name: Build
      run: cargo build --workspace
    - name: Test
      run: cargo test --workspace

  lint:
    name: Check code style
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    - uses: Swatinem/rust-cache@v2
    - name: Check format
      run: cargo fmt --all -- --check
    - name: Check lint
      env:
        RUSTFLAGS: "-Dwarnings"
      run: cargo clippy --workspace

  docs:
    name: Check docs
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - name: Check docs
      env:
        RUSTDOCFLAGS: -Dwarnings
      run: cargo doc --workspace --no-deps
